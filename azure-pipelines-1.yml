# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main  # Déclenchement sur la branche principale

pool:
  vmImage: 'default'  # Image de l'agent

variables:
  azureSubscription: '0299a3a0-0f11-4c6e-bc66-0840b9ecef30'  # Nom du Service Connection dans Azure DevOps
  resourceGroupName: 'heumbia21'  # Nom du groupe de ressources Azure
  functionAppBlobTrigger: '<myfunctionapp21>'  # Nom de l'Azure Function App pour BlobTriggerFunction
  functionAppBusFunction: '<myfunctionapp21>'  # Nom de l'Azure Function App pour BusFunction

steps:
# Étape 1 : Installer les dépendances .NET
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.2'  # Assurez-vous de choisir une version compatible avec vos projets
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Étape 2 : Restaurer les packages NuGet pour BlobTriggerFunction
- task: NuGetCommand@2
  displayName: 'Restore NuGet packages for BlobTriggerFunction'
  inputs:
    restoreSolution: 'BlobTriggerFunction/BlobTriggerFunction.csproj'

# Étape 3 : Construire le projet BlobTriggerFunction
- task: DotNetCoreCLI@2
  displayName: 'Build BlobTriggerFunction'
  inputs:
    command: 'build'
    projects: 'BlobTriggerFunction/BlobTriggerFunction.csproj'
    arguments: '--configuration Release'

# Étape 4 : Publier les artefacts de BlobTriggerFunction
- task: DotNetCoreCLI@2
  displayName: 'Publish BlobTriggerFunction'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'BlobTriggerFunction/BlobTriggerFunction.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/BlobTriggerFunction'
    modifyOutputPath: true

# Étape 5 : Restaurer les packages NuGet pour BusFunction
- task: NuGetCommand@2
  displayName: 'Restore NuGet packages for BusFunction'
  inputs:
    restoreSolution: 'BusFunction/BusFunction.csproj'

# Étape 6 : Construire le projet BusFunction
- task: DotNetCoreCLI@2
  displayName: 'Build BusFunction'
  inputs:
    command: 'build'
    projects: 'BusFunction/BusFunction.csproj'
    arguments: '--configuration Release'

# Étape 7 : Publier les artefacts de BusFunction
- task: DotNetCoreCLI@2
  displayName: 'Publish BusFunction'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'BusFunction/BusFunction.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/BusFunction'
    modifyOutputPath: true

# Étape 8 : Déployer BlobTriggerFunction sur Azure
- task: AzureFunctionApp@1
  displayName: 'Deploy BlobTriggerFunction'
  inputs:
    azureSubscription: $(azureSubscription)
    appType: 'functionApp'
    appName: $(functionAppBlobTrigger)
    package: '$(Build.ArtifactStagingDirectory)/BlobTriggerFunction'

# Étape 9 : Déployer BusFunction sur Azure
- task: AzureFunctionApp@1
  displayName: 'Deploy BusFunction'
  inputs:
    azureSubscription: $(azureSubscription)
    appType: 'functionApp'
    appName: $(functionAppBusFunction)
    package: '$(Build.ArtifactStagingDirectory)/BusFunction'
